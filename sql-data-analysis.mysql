SELECT departments.department_name, 
              COALESCE(AVG(sales.sale_amount), 0) AS avg_sales,
              COALESCE(MAX(sales.sale_amount), 0) AS max_sales,
              COALESCE(MIN(sales.sale_amount), 0) AS min_sales 
                  FROM employees 
                       LEFT JOIN departments ON departments.department_id = employees.department_id 
                       LEFT JOIN sales ON employees.employee_id = sales.employee_id 
                               AND sales.sale_date BETWEEN ‘2023-01-01’ AND ‘2023-12-31’ 
                                    GROUP BY departments.department_name 
                                           HAVING AVG(sales.sale_amount) > 500 
                                                  ORDER BY AVG(sales.sale_amount) DESC;







SELECT departments.department_name, 
   COUNT(employees.employee_id) AS employee_count, 
   SUM(sales.sale_amount) AS total_sales,
   SUM(sales.sale_amount)/COUNT(employees.employee_id) AS avg_per_employee 
         FROM employees 
               INNER JOIN departments ON employees.department_id = departments.department_id
               INNER JOIN sales ON employees.employee_id = sales.employee_id 
                      WHERE sale_date BETWEEN '2024-01-01' AND '2024-12-31' 
                             GROUP BY departments.department_name 
                                    HAVING SUM(sales.sale_amount) > 2000 
                                            ORDER BY total_sales DESC;





SELECT d.department_name, 
   COALESCE(COUNT(DISTINCT e.employee_id),0) AS count_employee,
   COALESCE(COUNT(DISTINCT s.sale_amount),0) AS count_distinct_sale,
   COALESCE(MAX(s.sale_amount),0) AS max_sale,
   COALESCE(AVG(s.sale_amount), 0) AS avg_sale
      FROM departments d
         LEFT JOIN employees e ON e.department_id = d.department_id
         LEFT JOIN sales s ON s.employee_id = e.employee_id 
         AND s.sale_date BETWEEN '2023-01-01' AND '2023-12-31'
             GROUP BY d.department_name
                   HAVING COUNT(DISTINCT e.employee_id) > 3
                      AND COALESCE(MAX(s.sale_amount), 0) > 5000
                           ORDER BY avg_sale DESC;
                           
                           
                           
                           
                           
SELECT c.client_id, c.name, c.city, c.income
FROM clients c
      JOIN (
            SELECT city, AVG(income) AS avg_income
            FROM clients
            GROUP BY city
            )clients_2 ON clients_2.city = c.city
               WHERE c.income > clients_2.avg_income
                  ORDER BY c.city, c.income DESC;                           